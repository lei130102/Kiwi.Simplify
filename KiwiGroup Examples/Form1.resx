<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="group4Custom.StateNormal.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gq0IhgAAAABJRU5ErkJggg==
</value>
  </data>
</root>